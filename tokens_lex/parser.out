Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BREAK
    DEF
    DIC
    DIVIDEINT
    EXPONENT
    FROM
    IMPORT
    IS
    LIST
    MODULE
    NONE
    NOT
    PRINT
    RETURN
    SET
    THEN
    TUPLE

Grammar

Rule 0     S' -> assign
Rule 1     assign -> NAME EQUALS expr
Rule 2     assign -> NAME EQUALS list
Rule 3     assign -> NAME EQUALS cad
Rule 4     assign -> for
Rule 5     assign -> while
Rule 6     assign -> if
Rule 7     expr -> expr PLUS term
Rule 8     expr -> expr MINUS term
Rule 9     expr -> term
Rule 10    term -> term TIMES factor
Rule 11    term -> term DIVIDE factor
Rule 12    term -> factor
Rule 13    list -> LCORCHETE RCORCHETE
Rule 14    list -> LCORCHETE element RCORCHETE
Rule 15    list -> LCORCHETE element elements RCORCHETE
Rule 16    element -> factor
Rule 17    element -> NAME
Rule 18    element -> list
Rule 19    elements -> COMMA element
Rule 20    elements -> COMMA list
Rule 21    elements -> COMMA element elements
Rule 22    factor -> NUMBER
Rule 23    factor -> MINUS NUMBER
Rule 24    factor -> NAME
Rule 25    cad -> COMILLA NAME COMILLA
Rule 26    cad -> COMILLAD NAME COMILLAD
Rule 27    cad -> cad LCORCHETE index RCORCHETE
Rule 28    index -> factor
Rule 29    index -> factor DPOINT factor
Rule 30    index -> factor DPOINT factor DPOINT factor
Rule 31    while -> WHILE LPAREN comparison RPAREN DPOINT
Rule 32    while -> WHILE comparison DPOINT
Rule 33    while -> WHILE LPAREN comparison comparisons RPAREN DPOINT
Rule 34    while -> WHILE comparison comparisons DPOINT
Rule 35    comparisons -> AND comparison
Rule 36    comparisons -> AND comparison comparisons
Rule 37    comparisons -> OR comparison
Rule 38    comparisons -> OR comparison comparisons
Rule 39    bool -> TRUE
Rule 40    bool -> FALSE
Rule 41    comparison -> comp DEQUALS comp
Rule 42    comparison -> comp DIFFERENT comp
Rule 43    comparison -> comp HIGHER comp
Rule 44    comparison -> comp LESS comp
Rule 45    comparison -> comp HIGHEREQ comp
Rule 46    comparison -> comp LESSEQ comp
Rule 47    comparison -> bool
Rule 48    comp -> expr
Rule 49    comp -> element
Rule 50    for -> FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
Rule 51    for -> FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
Rule 52    for -> FOR NAME IN NAME DPOINT
Rule 53    r_values -> r_value COMMA r_value
Rule 54    r_values -> r_value COMMA r_value COMMA r_value
Rule 55    r_value -> factor
Rule 56    r_value -> LEN LPAREN NAME RPAREN
Rule 57    if -> IF LPAREN comparison RPAREN DPOINT assign
Rule 58    if -> IF LPAREN comparison comparisons RPAREN DPOINT assign
Rule 59    if -> IF comparison DPOINT assign
Rule 60    if -> IF comparison comparisons DPOINT assign
Rule 61    if -> IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
Rule 62    if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
Rule 63    if -> IF comparison DPOINT assign ELSE DPOINT assign
Rule 64    if -> IF comparison comparisons DPOINT assign ELSE DPOINT assign
Rule 65    if -> IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
Rule 66    if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
Rule 67    if -> IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
Rule 68    if -> IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

Terminals, with rules where they appear

AND                  : 35 36
AS                   : 
BREAK                : 
COMILLA              : 25 25
COMILLAD             : 26 26
COMMA                : 19 20 21 53 54 54
DEF                  : 
DEQUALS              : 41
DIC                  : 
DIFFERENT            : 42
DIVIDE               : 11
DIVIDEINT            : 
DPOINT               : 29 30 30 31 32 33 34 50 51 52 57 58 59 60 61 61 62 62 63 63 64 64 65 65 65 66 66 66 67 67 67 68 68 68
ELIF                 : 65 66 67 68
ELSE                 : 61 62 63 64 65 66 67 68
EQUALS               : 1 2 3
EXPONENT             : 
FALSE                : 40
FOR                  : 50 51 52
FROM                 : 
HIGHER               : 43
HIGHEREQ             : 45
IF                   : 57 58 59 60 61 62 63 64 65 66 67 68
IMPORT               : 
IN                   : 50 51 52
IS                   : 
LCORCHETE            : 13 14 15 27
LEN                  : 56
LESS                 : 44
LESSEQ               : 46
LIST                 : 
LPAREN               : 31 33 50 51 56 57 58 61 62 65 65 66 66
MINUS                : 8 23
MODULE               : 
NAME                 : 1 2 3 17 24 25 26 50 51 52 52 56
NONE                 : 
NOT                  : 
NUMBER               : 22 23
OR                   : 37 38
PLUS                 : 7
PRINT                : 
RANGE                : 50 51
RCORCHETE            : 13 14 15 27
RETURN               : 
RPAREN               : 31 33 50 51 56 57 58 61 62 65 65 66 66
SET                  : 
THEN                 : 
TIMES                : 10
TRUE                 : 39
TUPLE                : 
WHILE                : 31 32 33 34
error                : 

Nonterminals, with rules where they appear

assign               : 57 58 59 60 61 61 62 62 63 63 64 64 65 65 65 66 66 66 67 67 67 68 68 68 0
bool                 : 47
cad                  : 3 27
comp                 : 41 41 42 42 43 43 44 44 45 45 46 46
comparison           : 31 32 33 34 35 36 37 38 57 58 59 60 61 62 63 64 65 65 66 66 67 67 68 68
comparisons          : 33 34 36 38 58 60 62 64 66 66 68 68
element              : 14 15 19 21 49
elements             : 15 21
expr                 : 1 7 8 48
factor               : 10 11 12 16 28 29 29 30 30 30 55
for                  : 4
if                   : 6
index                : 27
list                 : 2 18 20
r_value              : 50 53 53 54 54 54
r_values             : 51
term                 : 7 8 9 10 11
while                : 5

Parsing method: LALR

state 0

    (0) S' -> . assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 1
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 1

    (0) S' -> assign .



state 2

    (1) assign -> NAME . EQUALS expr
    (2) assign -> NAME . EQUALS list
    (3) assign -> NAME . EQUALS cad

    EQUALS          shift and go to state 9


state 3

    (4) assign -> for .

    $end            reduce using rule 4 (assign -> for .)
    ELSE            reduce using rule 4 (assign -> for .)
    ELIF            reduce using rule 4 (assign -> for .)


state 4

    (5) assign -> while .

    $end            reduce using rule 5 (assign -> while .)
    ELSE            reduce using rule 5 (assign -> while .)
    ELIF            reduce using rule 5 (assign -> while .)


state 5

    (6) assign -> if .

    $end            reduce using rule 6 (assign -> if .)
    ELSE            reduce using rule 6 (assign -> if .)
    ELIF            reduce using rule 6 (assign -> if .)


state 6

    (50) for -> FOR . NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> FOR . NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> FOR . NAME IN NAME DPOINT

    NAME            shift and go to state 10


state 7

    (31) while -> WHILE . LPAREN comparison RPAREN DPOINT
    (32) while -> WHILE . comparison DPOINT
    (33) while -> WHILE . LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> WHILE . comparison comparisons DPOINT
    (41) comparison -> . comp DEQUALS comp
    (42) comparison -> . comp DIFFERENT comp
    (43) comparison -> . comp HIGHER comp
    (44) comparison -> . comp LESS comp
    (45) comparison -> . comp HIGHEREQ comp
    (46) comparison -> . comp LESSEQ comp
    (47) comparison -> . bool
    (48) comp -> . expr
    (49) comp -> . element
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    LPAREN          shift and go to state 11
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comparison                     shift and go to state 12
    comp                           shift and go to state 13
    bool                           shift and go to state 14
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 8

    (57) if -> IF . LPAREN comparison RPAREN DPOINT assign
    (58) if -> IF . LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> IF . comparison DPOINT assign
    (60) if -> IF . comparison comparisons DPOINT assign
    (61) if -> IF . LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> IF . LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> IF . comparison DPOINT assign ELSE DPOINT assign
    (64) if -> IF . comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> IF . LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> IF . LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> IF . comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> IF . comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign
    (41) comparison -> . comp DEQUALS comp
    (42) comparison -> . comp DIFFERENT comp
    (43) comparison -> . comp HIGHER comp
    (44) comparison -> . comp LESS comp
    (45) comparison -> . comp HIGHEREQ comp
    (46) comparison -> . comp LESSEQ comp
    (47) comparison -> . bool
    (48) comp -> . expr
    (49) comp -> . element
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    LPAREN          shift and go to state 26
    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comparison                     shift and go to state 27
    comp                           shift and go to state 13
    bool                           shift and go to state 14
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 9

    (1) assign -> NAME EQUALS . expr
    (2) assign -> NAME EQUALS . list
    (3) assign -> NAME EQUALS . cad
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE
    (25) cad -> . COMILLA NAME COMILLA
    (26) cad -> . COMILLAD NAME COMILLAD
    (27) cad -> . cad LCORCHETE index RCORCHETE
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME

    LCORCHETE       shift and go to state 25
    COMILLA         shift and go to state 32
    COMILLAD        shift and go to state 33
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    NAME            shift and go to state 28

    expr                           shift and go to state 29
    list                           shift and go to state 30
    cad                            shift and go to state 31
    term                           shift and go to state 19
    factor                         shift and go to state 34

state 10

    (50) for -> FOR NAME . IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> FOR NAME . IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> FOR NAME . IN NAME DPOINT

    IN              shift and go to state 35


state 11

    (31) while -> WHILE LPAREN . comparison RPAREN DPOINT
    (33) while -> WHILE LPAREN . comparison comparisons RPAREN DPOINT
    (41) comparison -> . comp DEQUALS comp
    (42) comparison -> . comp DIFFERENT comp
    (43) comparison -> . comp HIGHER comp
    (44) comparison -> . comp LESS comp
    (45) comparison -> . comp HIGHEREQ comp
    (46) comparison -> . comp LESSEQ comp
    (47) comparison -> . bool
    (48) comp -> . expr
    (49) comp -> . element
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comparison                     shift and go to state 36
    comp                           shift and go to state 13
    bool                           shift and go to state 14
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 12

    (32) while -> WHILE comparison . DPOINT
    (34) while -> WHILE comparison . comparisons DPOINT
    (35) comparisons -> . AND comparison
    (36) comparisons -> . AND comparison comparisons
    (37) comparisons -> . OR comparison
    (38) comparisons -> . OR comparison comparisons

    DPOINT          shift and go to state 37
    AND             shift and go to state 39
    OR              shift and go to state 40

    comparisons                    shift and go to state 38

state 13

    (41) comparison -> comp . DEQUALS comp
    (42) comparison -> comp . DIFFERENT comp
    (43) comparison -> comp . HIGHER comp
    (44) comparison -> comp . LESS comp
    (45) comparison -> comp . HIGHEREQ comp
    (46) comparison -> comp . LESSEQ comp

    DEQUALS         shift and go to state 41
    DIFFERENT       shift and go to state 42
    HIGHER          shift and go to state 43
    LESS            shift and go to state 44
    HIGHEREQ        shift and go to state 45
    LESSEQ          shift and go to state 46


state 14

    (47) comparison -> bool .

    DPOINT          reduce using rule 47 (comparison -> bool .)
    AND             reduce using rule 47 (comparison -> bool .)
    OR              reduce using rule 47 (comparison -> bool .)
    RPAREN          reduce using rule 47 (comparison -> bool .)


state 15

    (48) comp -> expr .
    (7) expr -> expr . PLUS term
    (8) expr -> expr . MINUS term

    DEQUALS         reduce using rule 48 (comp -> expr .)
    DIFFERENT       reduce using rule 48 (comp -> expr .)
    HIGHER          reduce using rule 48 (comp -> expr .)
    LESS            reduce using rule 48 (comp -> expr .)
    HIGHEREQ        reduce using rule 48 (comp -> expr .)
    LESSEQ          reduce using rule 48 (comp -> expr .)
    DPOINT          reduce using rule 48 (comp -> expr .)
    AND             reduce using rule 48 (comp -> expr .)
    OR              reduce using rule 48 (comp -> expr .)
    RPAREN          reduce using rule 48 (comp -> expr .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48


state 16

    (49) comp -> element .

    DEQUALS         reduce using rule 49 (comp -> element .)
    DIFFERENT       reduce using rule 49 (comp -> element .)
    HIGHER          reduce using rule 49 (comp -> element .)
    LESS            reduce using rule 49 (comp -> element .)
    HIGHEREQ        reduce using rule 49 (comp -> element .)
    LESSEQ          reduce using rule 49 (comp -> element .)
    DPOINT          reduce using rule 49 (comp -> element .)
    AND             reduce using rule 49 (comp -> element .)
    OR              reduce using rule 49 (comp -> element .)
    RPAREN          reduce using rule 49 (comp -> element .)


state 17

    (39) bool -> TRUE .

    DPOINT          reduce using rule 39 (bool -> TRUE .)
    AND             reduce using rule 39 (bool -> TRUE .)
    OR              reduce using rule 39 (bool -> TRUE .)
    RPAREN          reduce using rule 39 (bool -> TRUE .)


state 18

    (40) bool -> FALSE .

    DPOINT          reduce using rule 40 (bool -> FALSE .)
    AND             reduce using rule 40 (bool -> FALSE .)
    OR              reduce using rule 40 (bool -> FALSE .)
    RPAREN          reduce using rule 40 (bool -> FALSE .)


state 19

    (9) expr -> term .
    (10) term -> term . TIMES factor
    (11) term -> term . DIVIDE factor

    PLUS            reduce using rule 9 (expr -> term .)
    MINUS           reduce using rule 9 (expr -> term .)
    DEQUALS         reduce using rule 9 (expr -> term .)
    DIFFERENT       reduce using rule 9 (expr -> term .)
    HIGHER          reduce using rule 9 (expr -> term .)
    LESS            reduce using rule 9 (expr -> term .)
    HIGHEREQ        reduce using rule 9 (expr -> term .)
    LESSEQ          reduce using rule 9 (expr -> term .)
    $end            reduce using rule 9 (expr -> term .)
    ELSE            reduce using rule 9 (expr -> term .)
    ELIF            reduce using rule 9 (expr -> term .)
    DPOINT          reduce using rule 9 (expr -> term .)
    AND             reduce using rule 9 (expr -> term .)
    OR              reduce using rule 9 (expr -> term .)
    RPAREN          reduce using rule 9 (expr -> term .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50


state 20

    (23) factor -> MINUS . NUMBER

    NUMBER          shift and go to state 51


state 21

    (16) element -> factor .
    (12) term -> factor .

  ! reduce/reduce conflict for DEQUALS resolved using rule 12 (term -> factor .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 12 (term -> factor .)
  ! reduce/reduce conflict for HIGHER resolved using rule 12 (term -> factor .)
  ! reduce/reduce conflict for LESS resolved using rule 12 (term -> factor .)
  ! reduce/reduce conflict for HIGHEREQ resolved using rule 12 (term -> factor .)
  ! reduce/reduce conflict for LESSEQ resolved using rule 12 (term -> factor .)
  ! reduce/reduce conflict for DPOINT resolved using rule 12 (term -> factor .)
  ! reduce/reduce conflict for AND resolved using rule 12 (term -> factor .)
  ! reduce/reduce conflict for OR resolved using rule 12 (term -> factor .)
  ! reduce/reduce conflict for RPAREN resolved using rule 12 (term -> factor .)
    TIMES           reduce using rule 12 (term -> factor .)
    DIVIDE          reduce using rule 12 (term -> factor .)
    PLUS            reduce using rule 12 (term -> factor .)
    MINUS           reduce using rule 12 (term -> factor .)
    DEQUALS         reduce using rule 12 (term -> factor .)
    DIFFERENT       reduce using rule 12 (term -> factor .)
    HIGHER          reduce using rule 12 (term -> factor .)
    LESS            reduce using rule 12 (term -> factor .)
    HIGHEREQ        reduce using rule 12 (term -> factor .)
    LESSEQ          reduce using rule 12 (term -> factor .)
    DPOINT          reduce using rule 12 (term -> factor .)
    AND             reduce using rule 12 (term -> factor .)
    OR              reduce using rule 12 (term -> factor .)
    RPAREN          reduce using rule 12 (term -> factor .)

  ! DEQUALS         [ reduce using rule 16 (element -> factor .) ]
  ! DIFFERENT       [ reduce using rule 16 (element -> factor .) ]
  ! HIGHER          [ reduce using rule 16 (element -> factor .) ]
  ! LESS            [ reduce using rule 16 (element -> factor .) ]
  ! HIGHEREQ        [ reduce using rule 16 (element -> factor .) ]
  ! LESSEQ          [ reduce using rule 16 (element -> factor .) ]
  ! DPOINT          [ reduce using rule 16 (element -> factor .) ]
  ! AND             [ reduce using rule 16 (element -> factor .) ]
  ! OR              [ reduce using rule 16 (element -> factor .) ]
  ! RPAREN          [ reduce using rule 16 (element -> factor .) ]


state 22

    (17) element -> NAME .
    (24) factor -> NAME .

  ! reduce/reduce conflict for DEQUALS resolved using rule 17 (element -> NAME .)
  ! reduce/reduce conflict for DIFFERENT resolved using rule 17 (element -> NAME .)
  ! reduce/reduce conflict for HIGHER resolved using rule 17 (element -> NAME .)
  ! reduce/reduce conflict for LESS resolved using rule 17 (element -> NAME .)
  ! reduce/reduce conflict for HIGHEREQ resolved using rule 17 (element -> NAME .)
  ! reduce/reduce conflict for LESSEQ resolved using rule 17 (element -> NAME .)
  ! reduce/reduce conflict for RCORCHETE resolved using rule 17 (element -> NAME .)
  ! reduce/reduce conflict for COMMA resolved using rule 17 (element -> NAME .)
  ! reduce/reduce conflict for DPOINT resolved using rule 17 (element -> NAME .)
  ! reduce/reduce conflict for AND resolved using rule 17 (element -> NAME .)
  ! reduce/reduce conflict for OR resolved using rule 17 (element -> NAME .)
  ! reduce/reduce conflict for RPAREN resolved using rule 17 (element -> NAME .)
    DEQUALS         reduce using rule 17 (element -> NAME .)
    DIFFERENT       reduce using rule 17 (element -> NAME .)
    HIGHER          reduce using rule 17 (element -> NAME .)
    LESS            reduce using rule 17 (element -> NAME .)
    HIGHEREQ        reduce using rule 17 (element -> NAME .)
    LESSEQ          reduce using rule 17 (element -> NAME .)
    RCORCHETE       reduce using rule 17 (element -> NAME .)
    COMMA           reduce using rule 17 (element -> NAME .)
    DPOINT          reduce using rule 17 (element -> NAME .)
    AND             reduce using rule 17 (element -> NAME .)
    OR              reduce using rule 17 (element -> NAME .)
    RPAREN          reduce using rule 17 (element -> NAME .)
    TIMES           reduce using rule 24 (factor -> NAME .)
    DIVIDE          reduce using rule 24 (factor -> NAME .)
    PLUS            reduce using rule 24 (factor -> NAME .)
    MINUS           reduce using rule 24 (factor -> NAME .)

  ! DEQUALS         [ reduce using rule 24 (factor -> NAME .) ]
  ! DIFFERENT       [ reduce using rule 24 (factor -> NAME .) ]
  ! HIGHER          [ reduce using rule 24 (factor -> NAME .) ]
  ! LESS            [ reduce using rule 24 (factor -> NAME .) ]
  ! HIGHEREQ        [ reduce using rule 24 (factor -> NAME .) ]
  ! LESSEQ          [ reduce using rule 24 (factor -> NAME .) ]
  ! RCORCHETE       [ reduce using rule 24 (factor -> NAME .) ]
  ! COMMA           [ reduce using rule 24 (factor -> NAME .) ]
  ! DPOINT          [ reduce using rule 24 (factor -> NAME .) ]
  ! AND             [ reduce using rule 24 (factor -> NAME .) ]
  ! OR              [ reduce using rule 24 (factor -> NAME .) ]
  ! RPAREN          [ reduce using rule 24 (factor -> NAME .) ]


state 23

    (18) element -> list .

    DEQUALS         reduce using rule 18 (element -> list .)
    DIFFERENT       reduce using rule 18 (element -> list .)
    HIGHER          reduce using rule 18 (element -> list .)
    LESS            reduce using rule 18 (element -> list .)
    HIGHEREQ        reduce using rule 18 (element -> list .)
    LESSEQ          reduce using rule 18 (element -> list .)
    RCORCHETE       reduce using rule 18 (element -> list .)
    COMMA           reduce using rule 18 (element -> list .)
    DPOINT          reduce using rule 18 (element -> list .)
    AND             reduce using rule 18 (element -> list .)
    OR              reduce using rule 18 (element -> list .)
    RPAREN          reduce using rule 18 (element -> list .)


state 24

    (22) factor -> NUMBER .

    DEQUALS         reduce using rule 22 (factor -> NUMBER .)
    DIFFERENT       reduce using rule 22 (factor -> NUMBER .)
    HIGHER          reduce using rule 22 (factor -> NUMBER .)
    LESS            reduce using rule 22 (factor -> NUMBER .)
    HIGHEREQ        reduce using rule 22 (factor -> NUMBER .)
    LESSEQ          reduce using rule 22 (factor -> NUMBER .)
    TIMES           reduce using rule 22 (factor -> NUMBER .)
    DIVIDE          reduce using rule 22 (factor -> NUMBER .)
    PLUS            reduce using rule 22 (factor -> NUMBER .)
    MINUS           reduce using rule 22 (factor -> NUMBER .)
    $end            reduce using rule 22 (factor -> NUMBER .)
    ELSE            reduce using rule 22 (factor -> NUMBER .)
    ELIF            reduce using rule 22 (factor -> NUMBER .)
    RCORCHETE       reduce using rule 22 (factor -> NUMBER .)
    COMMA           reduce using rule 22 (factor -> NUMBER .)
    DPOINT          reduce using rule 22 (factor -> NUMBER .)
    AND             reduce using rule 22 (factor -> NUMBER .)
    OR              reduce using rule 22 (factor -> NUMBER .)
    RPAREN          reduce using rule 22 (factor -> NUMBER .)


state 25

    (13) list -> LCORCHETE . RCORCHETE
    (14) list -> LCORCHETE . element RCORCHETE
    (15) list -> LCORCHETE . element elements RCORCHETE
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    RCORCHETE       shift and go to state 52
    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    element                        shift and go to state 53
    factor                         shift and go to state 54
    list                           shift and go to state 23

state 26

    (57) if -> IF LPAREN . comparison RPAREN DPOINT assign
    (58) if -> IF LPAREN . comparison comparisons RPAREN DPOINT assign
    (61) if -> IF LPAREN . comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> IF LPAREN . comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (65) if -> IF LPAREN . comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> IF LPAREN . comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (41) comparison -> . comp DEQUALS comp
    (42) comparison -> . comp DIFFERENT comp
    (43) comparison -> . comp HIGHER comp
    (44) comparison -> . comp LESS comp
    (45) comparison -> . comp HIGHEREQ comp
    (46) comparison -> . comp LESSEQ comp
    (47) comparison -> . bool
    (48) comp -> . expr
    (49) comp -> . element
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comparison                     shift and go to state 55
    comp                           shift and go to state 13
    bool                           shift and go to state 14
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 27

    (59) if -> IF comparison . DPOINT assign
    (60) if -> IF comparison . comparisons DPOINT assign
    (63) if -> IF comparison . DPOINT assign ELSE DPOINT assign
    (64) if -> IF comparison . comparisons DPOINT assign ELSE DPOINT assign
    (67) if -> IF comparison . DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> IF comparison . comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign
    (35) comparisons -> . AND comparison
    (36) comparisons -> . AND comparison comparisons
    (37) comparisons -> . OR comparison
    (38) comparisons -> . OR comparison comparisons

    DPOINT          shift and go to state 56
    AND             shift and go to state 39
    OR              shift and go to state 40

    comparisons                    shift and go to state 57

state 28

    (24) factor -> NAME .

    TIMES           reduce using rule 24 (factor -> NAME .)
    DIVIDE          reduce using rule 24 (factor -> NAME .)
    PLUS            reduce using rule 24 (factor -> NAME .)
    MINUS           reduce using rule 24 (factor -> NAME .)
    $end            reduce using rule 24 (factor -> NAME .)
    ELSE            reduce using rule 24 (factor -> NAME .)
    ELIF            reduce using rule 24 (factor -> NAME .)
    DEQUALS         reduce using rule 24 (factor -> NAME .)
    DIFFERENT       reduce using rule 24 (factor -> NAME .)
    HIGHER          reduce using rule 24 (factor -> NAME .)
    LESS            reduce using rule 24 (factor -> NAME .)
    HIGHEREQ        reduce using rule 24 (factor -> NAME .)
    LESSEQ          reduce using rule 24 (factor -> NAME .)
    DPOINT          reduce using rule 24 (factor -> NAME .)
    AND             reduce using rule 24 (factor -> NAME .)
    OR              reduce using rule 24 (factor -> NAME .)
    RPAREN          reduce using rule 24 (factor -> NAME .)
    RCORCHETE       reduce using rule 24 (factor -> NAME .)
    COMMA           reduce using rule 24 (factor -> NAME .)


state 29

    (1) assign -> NAME EQUALS expr .
    (7) expr -> expr . PLUS term
    (8) expr -> expr . MINUS term

    $end            reduce using rule 1 (assign -> NAME EQUALS expr .)
    ELSE            reduce using rule 1 (assign -> NAME EQUALS expr .)
    ELIF            reduce using rule 1 (assign -> NAME EQUALS expr .)
    PLUS            shift and go to state 47
    MINUS           shift and go to state 48


state 30

    (2) assign -> NAME EQUALS list .

    $end            reduce using rule 2 (assign -> NAME EQUALS list .)
    ELSE            reduce using rule 2 (assign -> NAME EQUALS list .)
    ELIF            reduce using rule 2 (assign -> NAME EQUALS list .)


state 31

    (3) assign -> NAME EQUALS cad .
    (27) cad -> cad . LCORCHETE index RCORCHETE

    $end            reduce using rule 3 (assign -> NAME EQUALS cad .)
    ELSE            reduce using rule 3 (assign -> NAME EQUALS cad .)
    ELIF            reduce using rule 3 (assign -> NAME EQUALS cad .)
    LCORCHETE       shift and go to state 58


state 32

    (25) cad -> COMILLA . NAME COMILLA

    NAME            shift and go to state 59


state 33

    (26) cad -> COMILLAD . NAME COMILLAD

    NAME            shift and go to state 60


state 34

    (12) term -> factor .

    TIMES           reduce using rule 12 (term -> factor .)
    DIVIDE          reduce using rule 12 (term -> factor .)
    PLUS            reduce using rule 12 (term -> factor .)
    MINUS           reduce using rule 12 (term -> factor .)
    $end            reduce using rule 12 (term -> factor .)
    ELSE            reduce using rule 12 (term -> factor .)
    ELIF            reduce using rule 12 (term -> factor .)
    DEQUALS         reduce using rule 12 (term -> factor .)
    DIFFERENT       reduce using rule 12 (term -> factor .)
    HIGHER          reduce using rule 12 (term -> factor .)
    LESS            reduce using rule 12 (term -> factor .)
    HIGHEREQ        reduce using rule 12 (term -> factor .)
    LESSEQ          reduce using rule 12 (term -> factor .)
    DPOINT          reduce using rule 12 (term -> factor .)
    AND             reduce using rule 12 (term -> factor .)
    OR              reduce using rule 12 (term -> factor .)
    RPAREN          reduce using rule 12 (term -> factor .)


state 35

    (50) for -> FOR NAME IN . RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> FOR NAME IN . RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> FOR NAME IN . NAME DPOINT

    RANGE           shift and go to state 62
    NAME            shift and go to state 61


state 36

    (31) while -> WHILE LPAREN comparison . RPAREN DPOINT
    (33) while -> WHILE LPAREN comparison . comparisons RPAREN DPOINT
    (35) comparisons -> . AND comparison
    (36) comparisons -> . AND comparison comparisons
    (37) comparisons -> . OR comparison
    (38) comparisons -> . OR comparison comparisons

    RPAREN          shift and go to state 63
    AND             shift and go to state 39
    OR              shift and go to state 40

    comparisons                    shift and go to state 64

state 37

    (32) while -> WHILE comparison DPOINT .

    $end            reduce using rule 32 (while -> WHILE comparison DPOINT .)
    ELSE            reduce using rule 32 (while -> WHILE comparison DPOINT .)
    ELIF            reduce using rule 32 (while -> WHILE comparison DPOINT .)


state 38

    (34) while -> WHILE comparison comparisons . DPOINT

    DPOINT          shift and go to state 65


state 39

    (35) comparisons -> AND . comparison
    (36) comparisons -> AND . comparison comparisons
    (41) comparison -> . comp DEQUALS comp
    (42) comparison -> . comp DIFFERENT comp
    (43) comparison -> . comp HIGHER comp
    (44) comparison -> . comp LESS comp
    (45) comparison -> . comp HIGHEREQ comp
    (46) comparison -> . comp LESSEQ comp
    (47) comparison -> . bool
    (48) comp -> . expr
    (49) comp -> . element
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comparison                     shift and go to state 66
    comp                           shift and go to state 13
    bool                           shift and go to state 14
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 40

    (37) comparisons -> OR . comparison
    (38) comparisons -> OR . comparison comparisons
    (41) comparison -> . comp DEQUALS comp
    (42) comparison -> . comp DIFFERENT comp
    (43) comparison -> . comp HIGHER comp
    (44) comparison -> . comp LESS comp
    (45) comparison -> . comp HIGHEREQ comp
    (46) comparison -> . comp LESSEQ comp
    (47) comparison -> . bool
    (48) comp -> . expr
    (49) comp -> . element
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comparison                     shift and go to state 67
    comp                           shift and go to state 13
    bool                           shift and go to state 14
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 41

    (41) comparison -> comp DEQUALS . comp
    (48) comp -> . expr
    (49) comp -> . element
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comp                           shift and go to state 68
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 42

    (42) comparison -> comp DIFFERENT . comp
    (48) comp -> . expr
    (49) comp -> . element
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comp                           shift and go to state 69
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 43

    (43) comparison -> comp HIGHER . comp
    (48) comp -> . expr
    (49) comp -> . element
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comp                           shift and go to state 70
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 44

    (44) comparison -> comp LESS . comp
    (48) comp -> . expr
    (49) comp -> . element
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comp                           shift and go to state 71
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 45

    (45) comparison -> comp HIGHEREQ . comp
    (48) comp -> . expr
    (49) comp -> . element
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comp                           shift and go to state 72
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 46

    (46) comparison -> comp LESSEQ . comp
    (48) comp -> . expr
    (49) comp -> . element
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comp                           shift and go to state 73
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 47

    (7) expr -> expr PLUS . term
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME

    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    NAME            shift and go to state 28

    term                           shift and go to state 74
    factor                         shift and go to state 34

state 48

    (8) expr -> expr MINUS . term
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME

    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    NAME            shift and go to state 28

    term                           shift and go to state 75
    factor                         shift and go to state 34

state 49

    (10) term -> term TIMES . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME

    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    NAME            shift and go to state 28

    factor                         shift and go to state 76

state 50

    (11) term -> term DIVIDE . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME

    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    NAME            shift and go to state 28

    factor                         shift and go to state 77

state 51

    (23) factor -> MINUS NUMBER .

    DEQUALS         reduce using rule 23 (factor -> MINUS NUMBER .)
    DIFFERENT       reduce using rule 23 (factor -> MINUS NUMBER .)
    HIGHER          reduce using rule 23 (factor -> MINUS NUMBER .)
    LESS            reduce using rule 23 (factor -> MINUS NUMBER .)
    HIGHEREQ        reduce using rule 23 (factor -> MINUS NUMBER .)
    LESSEQ          reduce using rule 23 (factor -> MINUS NUMBER .)
    TIMES           reduce using rule 23 (factor -> MINUS NUMBER .)
    DIVIDE          reduce using rule 23 (factor -> MINUS NUMBER .)
    PLUS            reduce using rule 23 (factor -> MINUS NUMBER .)
    MINUS           reduce using rule 23 (factor -> MINUS NUMBER .)
    $end            reduce using rule 23 (factor -> MINUS NUMBER .)
    ELSE            reduce using rule 23 (factor -> MINUS NUMBER .)
    ELIF            reduce using rule 23 (factor -> MINUS NUMBER .)
    RCORCHETE       reduce using rule 23 (factor -> MINUS NUMBER .)
    COMMA           reduce using rule 23 (factor -> MINUS NUMBER .)
    DPOINT          reduce using rule 23 (factor -> MINUS NUMBER .)
    AND             reduce using rule 23 (factor -> MINUS NUMBER .)
    OR              reduce using rule 23 (factor -> MINUS NUMBER .)
    RPAREN          reduce using rule 23 (factor -> MINUS NUMBER .)


state 52

    (13) list -> LCORCHETE RCORCHETE .

    DEQUALS         reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    DIFFERENT       reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    HIGHER          reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    LESS            reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    HIGHEREQ        reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    LESSEQ          reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    $end            reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    ELSE            reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    ELIF            reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    RCORCHETE       reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    COMMA           reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    DPOINT          reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    AND             reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    OR              reduce using rule 13 (list -> LCORCHETE RCORCHETE .)
    RPAREN          reduce using rule 13 (list -> LCORCHETE RCORCHETE .)


state 53

    (14) list -> LCORCHETE element . RCORCHETE
    (15) list -> LCORCHETE element . elements RCORCHETE
    (19) elements -> . COMMA element
    (20) elements -> . COMMA list
    (21) elements -> . COMMA element elements

    RCORCHETE       shift and go to state 78
    COMMA           shift and go to state 80

    elements                       shift and go to state 79

state 54

    (16) element -> factor .

    RCORCHETE       reduce using rule 16 (element -> factor .)
    COMMA           reduce using rule 16 (element -> factor .)


state 55

    (57) if -> IF LPAREN comparison . RPAREN DPOINT assign
    (58) if -> IF LPAREN comparison . comparisons RPAREN DPOINT assign
    (61) if -> IF LPAREN comparison . RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> IF LPAREN comparison . comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (65) if -> IF LPAREN comparison . RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> IF LPAREN comparison . comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (35) comparisons -> . AND comparison
    (36) comparisons -> . AND comparison comparisons
    (37) comparisons -> . OR comparison
    (38) comparisons -> . OR comparison comparisons

    RPAREN          shift and go to state 81
    AND             shift and go to state 39
    OR              shift and go to state 40

    comparisons                    shift and go to state 82

state 56

    (59) if -> IF comparison DPOINT . assign
    (63) if -> IF comparison DPOINT . assign ELSE DPOINT assign
    (67) if -> IF comparison DPOINT . assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 83
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 57

    (60) if -> IF comparison comparisons . DPOINT assign
    (64) if -> IF comparison comparisons . DPOINT assign ELSE DPOINT assign
    (68) if -> IF comparison comparisons . DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    DPOINT          shift and go to state 84


state 58

    (27) cad -> cad LCORCHETE . index RCORCHETE
    (28) index -> . factor
    (29) index -> . factor DPOINT factor
    (30) index -> . factor DPOINT factor DPOINT factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME

    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    NAME            shift and go to state 28

    index                          shift and go to state 85
    factor                         shift and go to state 86

state 59

    (25) cad -> COMILLA NAME . COMILLA

    COMILLA         shift and go to state 87


state 60

    (26) cad -> COMILLAD NAME . COMILLAD

    COMILLAD        shift and go to state 88


state 61

    (52) for -> FOR NAME IN NAME . DPOINT

    DPOINT          shift and go to state 89


state 62

    (50) for -> FOR NAME IN RANGE . LPAREN r_value RPAREN DPOINT
    (51) for -> FOR NAME IN RANGE . LPAREN r_values RPAREN DPOINT

    LPAREN          shift and go to state 90


state 63

    (31) while -> WHILE LPAREN comparison RPAREN . DPOINT

    DPOINT          shift and go to state 91


state 64

    (33) while -> WHILE LPAREN comparison comparisons . RPAREN DPOINT

    RPAREN          shift and go to state 92


state 65

    (34) while -> WHILE comparison comparisons DPOINT .

    $end            reduce using rule 34 (while -> WHILE comparison comparisons DPOINT .)
    ELSE            reduce using rule 34 (while -> WHILE comparison comparisons DPOINT .)
    ELIF            reduce using rule 34 (while -> WHILE comparison comparisons DPOINT .)


state 66

    (35) comparisons -> AND comparison .
    (36) comparisons -> AND comparison . comparisons
    (35) comparisons -> . AND comparison
    (36) comparisons -> . AND comparison comparisons
    (37) comparisons -> . OR comparison
    (38) comparisons -> . OR comparison comparisons

    DPOINT          reduce using rule 35 (comparisons -> AND comparison .)
    RPAREN          reduce using rule 35 (comparisons -> AND comparison .)
    AND             shift and go to state 39
    OR              shift and go to state 40

    comparisons                    shift and go to state 93

state 67

    (37) comparisons -> OR comparison .
    (38) comparisons -> OR comparison . comparisons
    (35) comparisons -> . AND comparison
    (36) comparisons -> . AND comparison comparisons
    (37) comparisons -> . OR comparison
    (38) comparisons -> . OR comparison comparisons

    DPOINT          reduce using rule 37 (comparisons -> OR comparison .)
    RPAREN          reduce using rule 37 (comparisons -> OR comparison .)
    AND             shift and go to state 39
    OR              shift and go to state 40

    comparisons                    shift and go to state 94

state 68

    (41) comparison -> comp DEQUALS comp .

    DPOINT          reduce using rule 41 (comparison -> comp DEQUALS comp .)
    AND             reduce using rule 41 (comparison -> comp DEQUALS comp .)
    OR              reduce using rule 41 (comparison -> comp DEQUALS comp .)
    RPAREN          reduce using rule 41 (comparison -> comp DEQUALS comp .)


state 69

    (42) comparison -> comp DIFFERENT comp .

    DPOINT          reduce using rule 42 (comparison -> comp DIFFERENT comp .)
    AND             reduce using rule 42 (comparison -> comp DIFFERENT comp .)
    OR              reduce using rule 42 (comparison -> comp DIFFERENT comp .)
    RPAREN          reduce using rule 42 (comparison -> comp DIFFERENT comp .)


state 70

    (43) comparison -> comp HIGHER comp .

    DPOINT          reduce using rule 43 (comparison -> comp HIGHER comp .)
    AND             reduce using rule 43 (comparison -> comp HIGHER comp .)
    OR              reduce using rule 43 (comparison -> comp HIGHER comp .)
    RPAREN          reduce using rule 43 (comparison -> comp HIGHER comp .)


state 71

    (44) comparison -> comp LESS comp .

    DPOINT          reduce using rule 44 (comparison -> comp LESS comp .)
    AND             reduce using rule 44 (comparison -> comp LESS comp .)
    OR              reduce using rule 44 (comparison -> comp LESS comp .)
    RPAREN          reduce using rule 44 (comparison -> comp LESS comp .)


state 72

    (45) comparison -> comp HIGHEREQ comp .

    DPOINT          reduce using rule 45 (comparison -> comp HIGHEREQ comp .)
    AND             reduce using rule 45 (comparison -> comp HIGHEREQ comp .)
    OR              reduce using rule 45 (comparison -> comp HIGHEREQ comp .)
    RPAREN          reduce using rule 45 (comparison -> comp HIGHEREQ comp .)


state 73

    (46) comparison -> comp LESSEQ comp .

    DPOINT          reduce using rule 46 (comparison -> comp LESSEQ comp .)
    AND             reduce using rule 46 (comparison -> comp LESSEQ comp .)
    OR              reduce using rule 46 (comparison -> comp LESSEQ comp .)
    RPAREN          reduce using rule 46 (comparison -> comp LESSEQ comp .)


state 74

    (7) expr -> expr PLUS term .
    (10) term -> term . TIMES factor
    (11) term -> term . DIVIDE factor

    PLUS            reduce using rule 7 (expr -> expr PLUS term .)
    MINUS           reduce using rule 7 (expr -> expr PLUS term .)
    DEQUALS         reduce using rule 7 (expr -> expr PLUS term .)
    DIFFERENT       reduce using rule 7 (expr -> expr PLUS term .)
    HIGHER          reduce using rule 7 (expr -> expr PLUS term .)
    LESS            reduce using rule 7 (expr -> expr PLUS term .)
    HIGHEREQ        reduce using rule 7 (expr -> expr PLUS term .)
    LESSEQ          reduce using rule 7 (expr -> expr PLUS term .)
    $end            reduce using rule 7 (expr -> expr PLUS term .)
    ELSE            reduce using rule 7 (expr -> expr PLUS term .)
    ELIF            reduce using rule 7 (expr -> expr PLUS term .)
    DPOINT          reduce using rule 7 (expr -> expr PLUS term .)
    AND             reduce using rule 7 (expr -> expr PLUS term .)
    OR              reduce using rule 7 (expr -> expr PLUS term .)
    RPAREN          reduce using rule 7 (expr -> expr PLUS term .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50


state 75

    (8) expr -> expr MINUS term .
    (10) term -> term . TIMES factor
    (11) term -> term . DIVIDE factor

    PLUS            reduce using rule 8 (expr -> expr MINUS term .)
    MINUS           reduce using rule 8 (expr -> expr MINUS term .)
    DEQUALS         reduce using rule 8 (expr -> expr MINUS term .)
    DIFFERENT       reduce using rule 8 (expr -> expr MINUS term .)
    HIGHER          reduce using rule 8 (expr -> expr MINUS term .)
    LESS            reduce using rule 8 (expr -> expr MINUS term .)
    HIGHEREQ        reduce using rule 8 (expr -> expr MINUS term .)
    LESSEQ          reduce using rule 8 (expr -> expr MINUS term .)
    $end            reduce using rule 8 (expr -> expr MINUS term .)
    ELSE            reduce using rule 8 (expr -> expr MINUS term .)
    ELIF            reduce using rule 8 (expr -> expr MINUS term .)
    DPOINT          reduce using rule 8 (expr -> expr MINUS term .)
    AND             reduce using rule 8 (expr -> expr MINUS term .)
    OR              reduce using rule 8 (expr -> expr MINUS term .)
    RPAREN          reduce using rule 8 (expr -> expr MINUS term .)
    TIMES           shift and go to state 49
    DIVIDE          shift and go to state 50


state 76

    (10) term -> term TIMES factor .

    TIMES           reduce using rule 10 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 10 (term -> term TIMES factor .)
    PLUS            reduce using rule 10 (term -> term TIMES factor .)
    MINUS           reduce using rule 10 (term -> term TIMES factor .)
    DEQUALS         reduce using rule 10 (term -> term TIMES factor .)
    DIFFERENT       reduce using rule 10 (term -> term TIMES factor .)
    HIGHER          reduce using rule 10 (term -> term TIMES factor .)
    LESS            reduce using rule 10 (term -> term TIMES factor .)
    HIGHEREQ        reduce using rule 10 (term -> term TIMES factor .)
    LESSEQ          reduce using rule 10 (term -> term TIMES factor .)
    $end            reduce using rule 10 (term -> term TIMES factor .)
    ELSE            reduce using rule 10 (term -> term TIMES factor .)
    ELIF            reduce using rule 10 (term -> term TIMES factor .)
    DPOINT          reduce using rule 10 (term -> term TIMES factor .)
    AND             reduce using rule 10 (term -> term TIMES factor .)
    OR              reduce using rule 10 (term -> term TIMES factor .)
    RPAREN          reduce using rule 10 (term -> term TIMES factor .)


state 77

    (11) term -> term DIVIDE factor .

    TIMES           reduce using rule 11 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 11 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 11 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 11 (term -> term DIVIDE factor .)
    DEQUALS         reduce using rule 11 (term -> term DIVIDE factor .)
    DIFFERENT       reduce using rule 11 (term -> term DIVIDE factor .)
    HIGHER          reduce using rule 11 (term -> term DIVIDE factor .)
    LESS            reduce using rule 11 (term -> term DIVIDE factor .)
    HIGHEREQ        reduce using rule 11 (term -> term DIVIDE factor .)
    LESSEQ          reduce using rule 11 (term -> term DIVIDE factor .)
    $end            reduce using rule 11 (term -> term DIVIDE factor .)
    ELSE            reduce using rule 11 (term -> term DIVIDE factor .)
    ELIF            reduce using rule 11 (term -> term DIVIDE factor .)
    DPOINT          reduce using rule 11 (term -> term DIVIDE factor .)
    AND             reduce using rule 11 (term -> term DIVIDE factor .)
    OR              reduce using rule 11 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 11 (term -> term DIVIDE factor .)


state 78

    (14) list -> LCORCHETE element RCORCHETE .

    DEQUALS         reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    DIFFERENT       reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    HIGHER          reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    LESS            reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    HIGHEREQ        reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    LESSEQ          reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    $end            reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    ELSE            reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    ELIF            reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    RCORCHETE       reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    COMMA           reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    DPOINT          reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    AND             reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    OR              reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)
    RPAREN          reduce using rule 14 (list -> LCORCHETE element RCORCHETE .)


state 79

    (15) list -> LCORCHETE element elements . RCORCHETE

    RCORCHETE       shift and go to state 95


state 80

    (19) elements -> COMMA . element
    (20) elements -> COMMA . list
    (21) elements -> COMMA . element elements
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME

    NAME            shift and go to state 22
    LCORCHETE       shift and go to state 25
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20

    element                        shift and go to state 96
    list                           shift and go to state 97
    factor                         shift and go to state 54

state 81

    (57) if -> IF LPAREN comparison RPAREN . DPOINT assign
    (61) if -> IF LPAREN comparison RPAREN . DPOINT assign ELSE DPOINT assign
    (65) if -> IF LPAREN comparison RPAREN . DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign

    DPOINT          shift and go to state 98


state 82

    (58) if -> IF LPAREN comparison comparisons . RPAREN DPOINT assign
    (62) if -> IF LPAREN comparison comparisons . RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> IF LPAREN comparison comparisons . RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign

    RPAREN          shift and go to state 99


state 83

    (59) if -> IF comparison DPOINT assign .
    (63) if -> IF comparison DPOINT assign . ELSE DPOINT assign
    (67) if -> IF comparison DPOINT assign . ELIF comparison DPOINT assign ELSE DPOINT assign

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
    $end            reduce using rule 59 (if -> IF comparison DPOINT assign .)
    ELSE            shift and go to state 100
    ELIF            shift and go to state 101

  ! ELSE            [ reduce using rule 59 (if -> IF comparison DPOINT assign .) ]
  ! ELIF            [ reduce using rule 59 (if -> IF comparison DPOINT assign .) ]


state 84

    (60) if -> IF comparison comparisons DPOINT . assign
    (64) if -> IF comparison comparisons DPOINT . assign ELSE DPOINT assign
    (68) if -> IF comparison comparisons DPOINT . assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 102
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 85

    (27) cad -> cad LCORCHETE index . RCORCHETE

    RCORCHETE       shift and go to state 103


state 86

    (28) index -> factor .
    (29) index -> factor . DPOINT factor
    (30) index -> factor . DPOINT factor DPOINT factor

    RCORCHETE       reduce using rule 28 (index -> factor .)
    DPOINT          shift and go to state 104


state 87

    (25) cad -> COMILLA NAME COMILLA .

    LCORCHETE       reduce using rule 25 (cad -> COMILLA NAME COMILLA .)
    $end            reduce using rule 25 (cad -> COMILLA NAME COMILLA .)
    ELSE            reduce using rule 25 (cad -> COMILLA NAME COMILLA .)
    ELIF            reduce using rule 25 (cad -> COMILLA NAME COMILLA .)


state 88

    (26) cad -> COMILLAD NAME COMILLAD .

    LCORCHETE       reduce using rule 26 (cad -> COMILLAD NAME COMILLAD .)
    $end            reduce using rule 26 (cad -> COMILLAD NAME COMILLAD .)
    ELSE            reduce using rule 26 (cad -> COMILLAD NAME COMILLAD .)
    ELIF            reduce using rule 26 (cad -> COMILLAD NAME COMILLAD .)


state 89

    (52) for -> FOR NAME IN NAME DPOINT .

    $end            reduce using rule 52 (for -> FOR NAME IN NAME DPOINT .)
    ELSE            reduce using rule 52 (for -> FOR NAME IN NAME DPOINT .)
    ELIF            reduce using rule 52 (for -> FOR NAME IN NAME DPOINT .)


state 90

    (50) for -> FOR NAME IN RANGE LPAREN . r_value RPAREN DPOINT
    (51) for -> FOR NAME IN RANGE LPAREN . r_values RPAREN DPOINT
    (55) r_value -> . factor
    (56) r_value -> . LEN LPAREN NAME RPAREN
    (53) r_values -> . r_value COMMA r_value
    (54) r_values -> . r_value COMMA r_value COMMA r_value
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME

    LEN             shift and go to state 108
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    NAME            shift and go to state 28

    r_value                        shift and go to state 105
    r_values                       shift and go to state 106
    factor                         shift and go to state 107

state 91

    (31) while -> WHILE LPAREN comparison RPAREN DPOINT .

    $end            reduce using rule 31 (while -> WHILE LPAREN comparison RPAREN DPOINT .)
    ELSE            reduce using rule 31 (while -> WHILE LPAREN comparison RPAREN DPOINT .)
    ELIF            reduce using rule 31 (while -> WHILE LPAREN comparison RPAREN DPOINT .)


state 92

    (33) while -> WHILE LPAREN comparison comparisons RPAREN . DPOINT

    DPOINT          shift and go to state 109


state 93

    (36) comparisons -> AND comparison comparisons .

    DPOINT          reduce using rule 36 (comparisons -> AND comparison comparisons .)
    RPAREN          reduce using rule 36 (comparisons -> AND comparison comparisons .)


state 94

    (38) comparisons -> OR comparison comparisons .

    DPOINT          reduce using rule 38 (comparisons -> OR comparison comparisons .)
    RPAREN          reduce using rule 38 (comparisons -> OR comparison comparisons .)


state 95

    (15) list -> LCORCHETE element elements RCORCHETE .

    DEQUALS         reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    DIFFERENT       reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    HIGHER          reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    LESS            reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    HIGHEREQ        reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    LESSEQ          reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    $end            reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    ELSE            reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    ELIF            reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    RCORCHETE       reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    COMMA           reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    DPOINT          reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    AND             reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    OR              reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)
    RPAREN          reduce using rule 15 (list -> LCORCHETE element elements RCORCHETE .)


state 96

    (19) elements -> COMMA element .
    (21) elements -> COMMA element . elements
    (19) elements -> . COMMA element
    (20) elements -> . COMMA list
    (21) elements -> . COMMA element elements

    RCORCHETE       reduce using rule 19 (elements -> COMMA element .)
    COMMA           shift and go to state 80

    elements                       shift and go to state 110

state 97

    (20) elements -> COMMA list .
    (18) element -> list .

  ! reduce/reduce conflict for RCORCHETE resolved using rule 18 (element -> list .)
    COMMA           reduce using rule 18 (element -> list .)
    RCORCHETE       reduce using rule 18 (element -> list .)

  ! RCORCHETE       [ reduce using rule 20 (elements -> COMMA list .) ]


state 98

    (57) if -> IF LPAREN comparison RPAREN DPOINT . assign
    (61) if -> IF LPAREN comparison RPAREN DPOINT . assign ELSE DPOINT assign
    (65) if -> IF LPAREN comparison RPAREN DPOINT . assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 111
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 99

    (58) if -> IF LPAREN comparison comparisons RPAREN . DPOINT assign
    (62) if -> IF LPAREN comparison comparisons RPAREN . DPOINT assign ELSE DPOINT assign
    (66) if -> IF LPAREN comparison comparisons RPAREN . DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign

    DPOINT          shift and go to state 112


state 100

    (63) if -> IF comparison DPOINT assign ELSE . DPOINT assign

    DPOINT          shift and go to state 113


state 101

    (67) if -> IF comparison DPOINT assign ELIF . comparison DPOINT assign ELSE DPOINT assign
    (41) comparison -> . comp DEQUALS comp
    (42) comparison -> . comp DIFFERENT comp
    (43) comparison -> . comp HIGHER comp
    (44) comparison -> . comp LESS comp
    (45) comparison -> . comp HIGHEREQ comp
    (46) comparison -> . comp LESSEQ comp
    (47) comparison -> . bool
    (48) comp -> . expr
    (49) comp -> . element
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comparison                     shift and go to state 114
    comp                           shift and go to state 13
    bool                           shift and go to state 14
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 102

    (60) if -> IF comparison comparisons DPOINT assign .
    (64) if -> IF comparison comparisons DPOINT assign . ELSE DPOINT assign
    (68) if -> IF comparison comparisons DPOINT assign . ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
    $end            reduce using rule 60 (if -> IF comparison comparisons DPOINT assign .)
    ELSE            shift and go to state 115
    ELIF            shift and go to state 116

  ! ELSE            [ reduce using rule 60 (if -> IF comparison comparisons DPOINT assign .) ]
  ! ELIF            [ reduce using rule 60 (if -> IF comparison comparisons DPOINT assign .) ]


state 103

    (27) cad -> cad LCORCHETE index RCORCHETE .

    LCORCHETE       reduce using rule 27 (cad -> cad LCORCHETE index RCORCHETE .)
    $end            reduce using rule 27 (cad -> cad LCORCHETE index RCORCHETE .)
    ELSE            reduce using rule 27 (cad -> cad LCORCHETE index RCORCHETE .)
    ELIF            reduce using rule 27 (cad -> cad LCORCHETE index RCORCHETE .)


state 104

    (29) index -> factor DPOINT . factor
    (30) index -> factor DPOINT . factor DPOINT factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME

    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    NAME            shift and go to state 28

    factor                         shift and go to state 117

state 105

    (50) for -> FOR NAME IN RANGE LPAREN r_value . RPAREN DPOINT
    (53) r_values -> r_value . COMMA r_value
    (54) r_values -> r_value . COMMA r_value COMMA r_value

    RPAREN          shift and go to state 118
    COMMA           shift and go to state 119


state 106

    (51) for -> FOR NAME IN RANGE LPAREN r_values . RPAREN DPOINT

    RPAREN          shift and go to state 120


state 107

    (55) r_value -> factor .

    RPAREN          reduce using rule 55 (r_value -> factor .)
    COMMA           reduce using rule 55 (r_value -> factor .)


state 108

    (56) r_value -> LEN . LPAREN NAME RPAREN

    LPAREN          shift and go to state 121


state 109

    (33) while -> WHILE LPAREN comparison comparisons RPAREN DPOINT .

    $end            reduce using rule 33 (while -> WHILE LPAREN comparison comparisons RPAREN DPOINT .)
    ELSE            reduce using rule 33 (while -> WHILE LPAREN comparison comparisons RPAREN DPOINT .)
    ELIF            reduce using rule 33 (while -> WHILE LPAREN comparison comparisons RPAREN DPOINT .)


state 110

    (21) elements -> COMMA element elements .

    RCORCHETE       reduce using rule 21 (elements -> COMMA element elements .)


state 111

    (57) if -> IF LPAREN comparison RPAREN DPOINT assign .
    (61) if -> IF LPAREN comparison RPAREN DPOINT assign . ELSE DPOINT assign
    (65) if -> IF LPAREN comparison RPAREN DPOINT assign . ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
    $end            reduce using rule 57 (if -> IF LPAREN comparison RPAREN DPOINT assign .)
    ELSE            shift and go to state 122
    ELIF            shift and go to state 123

  ! ELSE            [ reduce using rule 57 (if -> IF LPAREN comparison RPAREN DPOINT assign .) ]
  ! ELIF            [ reduce using rule 57 (if -> IF LPAREN comparison RPAREN DPOINT assign .) ]


state 112

    (58) if -> IF LPAREN comparison comparisons RPAREN DPOINT . assign
    (62) if -> IF LPAREN comparison comparisons RPAREN DPOINT . assign ELSE DPOINT assign
    (66) if -> IF LPAREN comparison comparisons RPAREN DPOINT . assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 124
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 113

    (63) if -> IF comparison DPOINT assign ELSE DPOINT . assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 125
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 114

    (67) if -> IF comparison DPOINT assign ELIF comparison . DPOINT assign ELSE DPOINT assign

    DPOINT          shift and go to state 126


state 115

    (64) if -> IF comparison comparisons DPOINT assign ELSE . DPOINT assign

    DPOINT          shift and go to state 127


state 116

    (68) if -> IF comparison comparisons DPOINT assign ELIF . comparison comparisons DPOINT assign ELSE DPOINT assign
    (41) comparison -> . comp DEQUALS comp
    (42) comparison -> . comp DIFFERENT comp
    (43) comparison -> . comp HIGHER comp
    (44) comparison -> . comp LESS comp
    (45) comparison -> . comp HIGHEREQ comp
    (46) comparison -> . comp LESSEQ comp
    (47) comparison -> . bool
    (48) comp -> . expr
    (49) comp -> . element
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comparison                     shift and go to state 128
    comp                           shift and go to state 13
    bool                           shift and go to state 14
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 117

    (29) index -> factor DPOINT factor .
    (30) index -> factor DPOINT factor . DPOINT factor

    RCORCHETE       reduce using rule 29 (index -> factor DPOINT factor .)
    DPOINT          shift and go to state 129


state 118

    (50) for -> FOR NAME IN RANGE LPAREN r_value RPAREN . DPOINT

    DPOINT          shift and go to state 130


state 119

    (53) r_values -> r_value COMMA . r_value
    (54) r_values -> r_value COMMA . r_value COMMA r_value
    (55) r_value -> . factor
    (56) r_value -> . LEN LPAREN NAME RPAREN
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME

    LEN             shift and go to state 108
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    NAME            shift and go to state 28

    r_value                        shift and go to state 131
    factor                         shift and go to state 107

state 120

    (51) for -> FOR NAME IN RANGE LPAREN r_values RPAREN . DPOINT

    DPOINT          shift and go to state 132


state 121

    (56) r_value -> LEN LPAREN . NAME RPAREN

    NAME            shift and go to state 133


state 122

    (61) if -> IF LPAREN comparison RPAREN DPOINT assign ELSE . DPOINT assign

    DPOINT          shift and go to state 134


state 123

    (65) if -> IF LPAREN comparison RPAREN DPOINT assign ELIF . LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign

    LPAREN          shift and go to state 135


state 124

    (58) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign .
    (62) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign . ELSE DPOINT assign
    (66) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign . ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELIF resolved as shift
    $end            reduce using rule 58 (if -> IF LPAREN comparison comparisons RPAREN DPOINT assign .)
    ELSE            shift and go to state 136
    ELIF            shift and go to state 137

  ! ELSE            [ reduce using rule 58 (if -> IF LPAREN comparison comparisons RPAREN DPOINT assign .) ]
  ! ELIF            [ reduce using rule 58 (if -> IF LPAREN comparison comparisons RPAREN DPOINT assign .) ]


state 125

    (63) if -> IF comparison DPOINT assign ELSE DPOINT assign .

    $end            reduce using rule 63 (if -> IF comparison DPOINT assign ELSE DPOINT assign .)
    ELSE            reduce using rule 63 (if -> IF comparison DPOINT assign ELSE DPOINT assign .)
    ELIF            reduce using rule 63 (if -> IF comparison DPOINT assign ELSE DPOINT assign .)


state 126

    (67) if -> IF comparison DPOINT assign ELIF comparison DPOINT . assign ELSE DPOINT assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 138
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 127

    (64) if -> IF comparison comparisons DPOINT assign ELSE DPOINT . assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 139
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 128

    (68) if -> IF comparison comparisons DPOINT assign ELIF comparison . comparisons DPOINT assign ELSE DPOINT assign
    (35) comparisons -> . AND comparison
    (36) comparisons -> . AND comparison comparisons
    (37) comparisons -> . OR comparison
    (38) comparisons -> . OR comparison comparisons

    AND             shift and go to state 39
    OR              shift and go to state 40

    comparisons                    shift and go to state 140

state 129

    (30) index -> factor DPOINT factor DPOINT . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME

    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    NAME            shift and go to state 28

    factor                         shift and go to state 141

state 130

    (50) for -> FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT .

    $end            reduce using rule 50 (for -> FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT .)
    ELSE            reduce using rule 50 (for -> FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT .)
    ELIF            reduce using rule 50 (for -> FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT .)


state 131

    (53) r_values -> r_value COMMA r_value .
    (54) r_values -> r_value COMMA r_value . COMMA r_value

    RPAREN          reduce using rule 53 (r_values -> r_value COMMA r_value .)
    COMMA           shift and go to state 142


state 132

    (51) for -> FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT .

    $end            reduce using rule 51 (for -> FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT .)
    ELSE            reduce using rule 51 (for -> FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT .)
    ELIF            reduce using rule 51 (for -> FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT .)


state 133

    (56) r_value -> LEN LPAREN NAME . RPAREN

    RPAREN          shift and go to state 143


state 134

    (61) if -> IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT . assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 144
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 135

    (65) if -> IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN . comparison RPAREN DPOINT assign ELSE DPOINT assign
    (41) comparison -> . comp DEQUALS comp
    (42) comparison -> . comp DIFFERENT comp
    (43) comparison -> . comp HIGHER comp
    (44) comparison -> . comp LESS comp
    (45) comparison -> . comp HIGHEREQ comp
    (46) comparison -> . comp LESSEQ comp
    (47) comparison -> . bool
    (48) comp -> . expr
    (49) comp -> . element
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comparison                     shift and go to state 145
    comp                           shift and go to state 13
    bool                           shift and go to state 14
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 136

    (62) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE . DPOINT assign

    DPOINT          shift and go to state 146


state 137

    (66) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF . LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign

    LPAREN          shift and go to state 147


state 138

    (67) if -> IF comparison DPOINT assign ELIF comparison DPOINT assign . ELSE DPOINT assign

    ELSE            shift and go to state 148


state 139

    (64) if -> IF comparison comparisons DPOINT assign ELSE DPOINT assign .

    $end            reduce using rule 64 (if -> IF comparison comparisons DPOINT assign ELSE DPOINT assign .)
    ELSE            reduce using rule 64 (if -> IF comparison comparisons DPOINT assign ELSE DPOINT assign .)
    ELIF            reduce using rule 64 (if -> IF comparison comparisons DPOINT assign ELSE DPOINT assign .)


state 140

    (68) if -> IF comparison comparisons DPOINT assign ELIF comparison comparisons . DPOINT assign ELSE DPOINT assign

    DPOINT          shift and go to state 149


state 141

    (30) index -> factor DPOINT factor DPOINT factor .

    RCORCHETE       reduce using rule 30 (index -> factor DPOINT factor DPOINT factor .)


state 142

    (54) r_values -> r_value COMMA r_value COMMA . r_value
    (55) r_value -> . factor
    (56) r_value -> . LEN LPAREN NAME RPAREN
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME

    LEN             shift and go to state 108
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    NAME            shift and go to state 28

    r_value                        shift and go to state 150
    factor                         shift and go to state 107

state 143

    (56) r_value -> LEN LPAREN NAME RPAREN .

    RPAREN          reduce using rule 56 (r_value -> LEN LPAREN NAME RPAREN .)
    COMMA           reduce using rule 56 (r_value -> LEN LPAREN NAME RPAREN .)


state 144

    (61) if -> IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign .

    $end            reduce using rule 61 (if -> IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign .)
    ELSE            reduce using rule 61 (if -> IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign .)
    ELIF            reduce using rule 61 (if -> IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign .)


state 145

    (65) if -> IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison . RPAREN DPOINT assign ELSE DPOINT assign

    RPAREN          shift and go to state 151


state 146

    (62) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT . assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 152
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 147

    (66) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN . comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (41) comparison -> . comp DEQUALS comp
    (42) comparison -> . comp DIFFERENT comp
    (43) comparison -> . comp HIGHER comp
    (44) comparison -> . comp LESS comp
    (45) comparison -> . comp HIGHEREQ comp
    (46) comparison -> . comp LESSEQ comp
    (47) comparison -> . bool
    (48) comp -> . expr
    (49) comp -> . element
    (39) bool -> . TRUE
    (40) bool -> . FALSE
    (7) expr -> . expr PLUS term
    (8) expr -> . expr MINUS term
    (9) expr -> . term
    (16) element -> . factor
    (17) element -> . NAME
    (18) element -> . list
    (10) term -> . term TIMES factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (22) factor -> . NUMBER
    (23) factor -> . MINUS NUMBER
    (24) factor -> . NAME
    (13) list -> . LCORCHETE RCORCHETE
    (14) list -> . LCORCHETE element RCORCHETE
    (15) list -> . LCORCHETE element elements RCORCHETE

    TRUE            shift and go to state 17
    FALSE           shift and go to state 18
    NAME            shift and go to state 22
    NUMBER          shift and go to state 24
    MINUS           shift and go to state 20
    LCORCHETE       shift and go to state 25

    comparison                     shift and go to state 153
    comp                           shift and go to state 13
    bool                           shift and go to state 14
    expr                           shift and go to state 15
    element                        shift and go to state 16
    term                           shift and go to state 19
    factor                         shift and go to state 21
    list                           shift and go to state 23

state 148

    (67) if -> IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE . DPOINT assign

    DPOINT          shift and go to state 154


state 149

    (68) if -> IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT . assign ELSE DPOINT assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 155
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 150

    (54) r_values -> r_value COMMA r_value COMMA r_value .

    RPAREN          reduce using rule 54 (r_values -> r_value COMMA r_value COMMA r_value .)


state 151

    (65) if -> IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN . DPOINT assign ELSE DPOINT assign

    DPOINT          shift and go to state 156


state 152

    (62) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign .

    $end            reduce using rule 62 (if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign .)
    ELSE            reduce using rule 62 (if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign .)
    ELIF            reduce using rule 62 (if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign .)


state 153

    (66) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison . comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (35) comparisons -> . AND comparison
    (36) comparisons -> . AND comparison comparisons
    (37) comparisons -> . OR comparison
    (38) comparisons -> . OR comparison comparisons

    AND             shift and go to state 39
    OR              shift and go to state 40

    comparisons                    shift and go to state 157

state 154

    (67) if -> IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT . assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 158
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 155

    (68) if -> IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign . ELSE DPOINT assign

    ELSE            shift and go to state 159


state 156

    (65) if -> IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT . assign ELSE DPOINT assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 160
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 157

    (66) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons . RPAREN DPOINT assign ELSE DPOINT assign

    RPAREN          shift and go to state 161


state 158

    (67) if -> IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign .

    $end            reduce using rule 67 (if -> IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign .)
    ELSE            reduce using rule 67 (if -> IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign .)
    ELIF            reduce using rule 67 (if -> IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign .)


state 159

    (68) if -> IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE . DPOINT assign

    DPOINT          shift and go to state 162


state 160

    (65) if -> IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign . ELSE DPOINT assign

    ELSE            shift and go to state 163


state 161

    (66) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN . DPOINT assign ELSE DPOINT assign

    DPOINT          shift and go to state 164


state 162

    (68) if -> IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT . assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 165
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 163

    (65) if -> IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE . DPOINT assign

    DPOINT          shift and go to state 166


state 164

    (66) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT . assign ELSE DPOINT assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 167
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 165

    (68) if -> IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign .

    $end            reduce using rule 68 (if -> IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign .)
    ELSE            reduce using rule 68 (if -> IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign .)
    ELIF            reduce using rule 68 (if -> IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign .)


state 166

    (65) if -> IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT . assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 168
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 167

    (66) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign . ELSE DPOINT assign

    ELSE            shift and go to state 169


state 168

    (65) if -> IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign .

    $end            reduce using rule 65 (if -> IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign .)
    ELSE            reduce using rule 65 (if -> IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign .)
    ELIF            reduce using rule 65 (if -> IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign .)


state 169

    (66) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE . DPOINT assign

    DPOINT          shift and go to state 170


state 170

    (66) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT . assign
    (1) assign -> . NAME EQUALS expr
    (2) assign -> . NAME EQUALS list
    (3) assign -> . NAME EQUALS cad
    (4) assign -> . for
    (5) assign -> . while
    (6) assign -> . if
    (50) for -> . FOR NAME IN RANGE LPAREN r_value RPAREN DPOINT
    (51) for -> . FOR NAME IN RANGE LPAREN r_values RPAREN DPOINT
    (52) for -> . FOR NAME IN NAME DPOINT
    (31) while -> . WHILE LPAREN comparison RPAREN DPOINT
    (32) while -> . WHILE comparison DPOINT
    (33) while -> . WHILE LPAREN comparison comparisons RPAREN DPOINT
    (34) while -> . WHILE comparison comparisons DPOINT
    (57) if -> . IF LPAREN comparison RPAREN DPOINT assign
    (58) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign
    (59) if -> . IF comparison DPOINT assign
    (60) if -> . IF comparison comparisons DPOINT assign
    (61) if -> . IF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (62) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (63) if -> . IF comparison DPOINT assign ELSE DPOINT assign
    (64) if -> . IF comparison comparisons DPOINT assign ELSE DPOINT assign
    (65) if -> . IF LPAREN comparison RPAREN DPOINT assign ELIF LPAREN comparison RPAREN DPOINT assign ELSE DPOINT assign
    (66) if -> . IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign
    (67) if -> . IF comparison DPOINT assign ELIF comparison DPOINT assign ELSE DPOINT assign
    (68) if -> . IF comparison comparisons DPOINT assign ELIF comparison comparisons DPOINT assign ELSE DPOINT assign

    NAME            shift and go to state 2
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8

    assign                         shift and go to state 171
    for                            shift and go to state 3
    while                          shift and go to state 4
    if                             shift and go to state 5

state 171

    (66) if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign .

    $end            reduce using rule 66 (if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign .)
    ELSE            reduce using rule 66 (if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign .)
    ELIF            reduce using rule 66 (if -> IF LPAREN comparison comparisons RPAREN DPOINT assign ELIF LPAREN comparison comparisons RPAREN DPOINT assign ELSE DPOINT assign .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 83 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 83 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 102 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 102 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 111 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 111 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 124 resolved as shift
WARNING: shift/reduce conflict for ELIF in state 124 resolved as shift
WARNING: reduce/reduce conflict in state 21 resolved using rule (term -> factor)
WARNING: rejected rule (element -> factor) in state 21
WARNING: reduce/reduce conflict in state 22 resolved using rule (element -> NAME)
WARNING: rejected rule (factor -> NAME) in state 22
WARNING: reduce/reduce conflict in state 97 resolved using rule (element -> list)
WARNING: rejected rule (elements -> COMMA list) in state 97
WARNING: Rule (elements -> COMMA list) is never reduced
